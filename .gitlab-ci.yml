# yaml-language-server: $schema=https://gitlab.com/gitlab-org/gitlab/-/raw/master/app/assets/javascripts/editor/schema/ci.json
stages:
  - test
  - build
  - docker
  - deploy

variables:
  BUILD_PSQL_9:
    description: "Rebuild Postgresql 9"
    value: "false"
    options:
      - "false"
      - "true"
  BUILD_PSQL_10:
    description: "Rebuild Postgresql 10"
    value: "false"
    options:
      - "false"
      - "true"
  BUILD_PSQL_11:
    description: "Rebuild Postgresql 11"
    value: "false"
    options:
      - "false"
      - "true"
  BUILD_PSQL_12:
    description: "Rebuild Postgresql 11"
    value: "false"
    options:
      - "false"
      - "true"
  BUILD_PSQL_13:
    description: "Rebuild Postgresql 13"
    value: "false"
    options:
      - "false"
      - "true"
  BUILD_PSQL_14:
    description: "Rebuild Postgresql 14"
    value: "false"
    options:
      - "false"
      - "true"
  BUILD_PSQL_15:
    description: "Rebuild Postgresql 15"
    value: "false"
    options:
      - "false"
      - "true"
  BUILD_PSQL_16:
    description: "Rebuild Postgresql 16"
    value: "false"
    options:
      - "false"
      - "true"

include:
  - component: $CI_SERVER_FQDN/templates/components/workflow/default@0.4.0
  - component: $CI_SERVER_FQDN/templates/components/publish/live@0.6.0
  - component: $CI_SERVER_FQDN/templates/components/publish/hub@0.6.0
  - component: $CI_SERVER_FQDN/templates/components/renovate/renovate@0.8.0

  # amd64/base
  - component: $CI_SERVER_FQDN/templates/components/docker/amd64@1.6.0
    rules:
      - if: $SKIP_PIPELINE == "true"
        when: never
      - when: always
    inputs:
      name: base:amd64
      dockerfile: docker/Dockerfile.base
      cache_tag: base-amd64
      tag: $DOCKER_IMAGE_PATH:base-amd64
      args: >-
        --cache-from=type=registry,ref=$HARBOR_REGISTRY_CACHE/docker/alpine-base-service:amd64

  # arm64/base
  - component: $CI_SERVER_FQDN/templates/components/docker/arm64@1.6.0
    rules:
      - if: $SKIP_PIPELINE == "true"
        when: never
      - when: always
    inputs:
      name: base:arm64
      dockerfile: docker/Dockerfile.base
      cache_tag: base-arm64
      tag: $DOCKER_IMAGE_PATH:base-arm64
      args: >-
        --cache-from=type=registry,ref=$HARBOR_REGISTRY_CACHE/docker/alpine-base-service:arm64

  # multi/base
  - component: $CI_SERVER_FQDN/templates/components/docker/multi@1.6.0
    rules:
      - if: $SKIP_PIPELINE == "true"
        when: never
      - when: always
    inputs:
      name: base:multi
      dockerfile: docker/Dockerfile.base
      cache_tag: base-multi
      needs:
        - docker:base:amd64
        - docker:base:arm64
      args: >-
        --cache-from=type=registry,ref=$HARBOR_REGISTRY_CACHE/docker/alpine-base-service:amd64
        --cache-from=type=registry,ref=$HARBOR_REGISTRY_CACHE/docker/alpine-base-service:arm64
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-amd64
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-arm64
      tag: $DOCKER_IMAGE_PATH:base
      healthcheck-uuid: cdf80660-72fe-41c9-aff5-2dabae6331f5

  # multi/psql:9
  - component: $CI_SERVER_FQDN/templates/components/docker/multi@1.6.0
    rules:
      - if: $SKIP_PIPELINE == "true"
        when: never
      - if: $BUILD_PSQL_9 == "true"
    inputs:
      name: psql:9
      stage: docker
      dockerfile: docker/Dockerfile.psql.9
      cache: false
      needs:
        - docker:base:amd64
        - docker:base:arm64
        - docker:base:multi
      args: >-
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-amd64
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-arm64
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-multi
      tag: $DOCKER_IMAGE_PATH:9
      tags: >-
        --tag=$DOCKER_IMAGE_PATH:9.6
        --tag=$DOCKER_IMAGE_PATH:9.6.13

  # multi/psql:10
  - component: $CI_SERVER_FQDN/templates/components/docker/multi@1.6.0
    rules:
      - if: $SKIP_PIPELINE == "true"
        when: never
      - if: $BUILD_PSQL_10 == "true"
    inputs:
      name: psql:10
      stage: docker
      dockerfile: docker/Dockerfile.psql.10
      cache: false
      needs:
        - docker:base:amd64
        - docker:base:arm64
        - docker:base:multi
      args: >-
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-amd64
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-arm64
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-multi
      tag: $DOCKER_IMAGE_PATH:10
      tags: >-
        --tag=$DOCKER_IMAGE_PATH:10.12

  # multi/psql:11
  - component: $CI_SERVER_FQDN/templates/components/docker/multi@1.6.0
    rules:
      - if: $SKIP_PIPELINE == "true"
        when: never
      - if: $BUILD_PSQL_11 == "true"
    inputs:
      name: psql:11
      stage: docker
      dockerfile: docker/Dockerfile.psql.11
      cache: false
      needs:
        - docker:base:amd64
        - docker:base:arm64
        - docker:base:multi
      args: >-
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-amd64
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-arm64
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-multi
      tag: $DOCKER_IMAGE_PATH:11
      tags: >-
        --tag=$DOCKER_IMAGE_PATH:11.12

  # multi/psql:12
  - component: $CI_SERVER_FQDN/templates/components/docker/multi@1.6.0
    rules:
      - if: $SKIP_PIPELINE == "true"
        when: never
      - if: $BUILD_PSQL_12 == "true"
    inputs:
      name: psql:12
      stage: docker
      dockerfile: docker/Dockerfile.psql.12
      cache: false
      needs:
        - docker:base:amd64
        - docker:base:arm64
        - docker:base:multi
      args: >-
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-amd64
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-arm64
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-multi
      tag: $DOCKER_IMAGE_PATH:12
      tags: >-
        --tag=$DOCKER_IMAGE_PATH:12.19

  # multi/psql:13
  - component: $CI_SERVER_FQDN/templates/components/docker/multi@1.6.0
    rules:
      - if: $SKIP_PIPELINE == "true"
        when: never
      - if: $BUILD_PSQL_13 == "true"
      - if: $BUILD_PSQL_13 == null
    inputs:
      name: psql:13
      stage: docker
      dockerfile: docker/Dockerfile.psql.13
      cache: false
      needs:
        - docker:base:amd64
        - docker:base:arm64
        - docker:base:multi
      args: >-
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-amd64
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-arm64
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-multi
      tag: $DOCKER_IMAGE_PATH:13
      tags: >-
        --tag=$DOCKER_IMAGE_PATH:13.16
      healthcheck-uuid: 8440483b-42f1-4f4f-aefc-136d5ef4b767

  # multi/psql:14
  - component: $CI_SERVER_FQDN/templates/components/docker/multi@1.6.0
    rules:
      - if: $SKIP_PIPELINE == "true"
        when: never
      - if: $BUILD_PSQL_14 == "true"
      - if: $BUILD_PSQL_14 == null
    inputs:
      name: psql:14
      stage: docker
      dockerfile: docker/Dockerfile.psql.14
      cache: false
      needs:
        - docker:base:amd64
        - docker:base:arm64
        - docker:base:multi
      args: >-
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-amd64
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-arm64
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-multi
      tag: $DOCKER_IMAGE_PATH:14
      tags: >-
        --tag=$DOCKER_IMAGE_PATH:14.12
      healthcheck-uuid: 35eeab7b-4fec-49e8-898a-b535444d0784

  # multi/psql:15
  - component: $CI_SERVER_FQDN/templates/components/docker/multi@1.6.0
    rules:
      - if: $SKIP_PIPELINE == "true"
        when: never
      - if: $BUILD_PSQL_15 == "true"
      - if: $BUILD_PSQL_15 == null
    inputs:
      name: psql:15
      stage: docker
      dockerfile: docker/Dockerfile.psql.15
      cache: false
      needs:
        - docker:base:amd64
        - docker:base:arm64
        - docker:base:multi
      args: >-
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-amd64
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-arm64
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-multi
      tag: $DOCKER_IMAGE_PATH:15
      tags: >-
        --tag=$DOCKER_IMAGE_PATH:15.7
      healthcheck-uuid: b88be602-0b87-404a-adea-66c6aa33fa64

  # multi/psql:16
  - component: $CI_SERVER_FQDN/templates/components/docker/multi@1.6.0
    rules:
      - if: $SKIP_PIPELINE == "true"
        when: never
      - if: $BUILD_PSQL_16 == "true"
      - if: $BUILD_PSQL_16 == null
    inputs:
      name: psql:16
      stage: docker
      dockerfile: docker/Dockerfile.psql.16
      cache: false
      needs:
        - docker:base:amd64
        - docker:base:arm64
        - docker:base:multi
      args: >-
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-amd64
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-arm64
        --cache-from=type=registry,ref=$DOCKER_IMAGE_CACHE_PATH:base-multi
      tag: $DOCKER_IMAGE_PATH:16
      tags: >-
        --tag=$DOCKER_IMAGE_PATH:16.3
      healthcheck-uuid: bed61e67-9033-4581-91a0-33ba8172d37c
#
#
# dockerhub:description:
#   stage: deploy
#   image: peterevans/dockerhub-description:3
#   rules:
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#     - if: $CI_PIPELINE_SOURCE == "schedule"
#   tags:
#     - datacore
#   variables:
#     DOCKERHUB_USERNAME: $DOCKER_HUB_USER
#     DOCKERHUB_PASSWORD: $DOCKER_HUB_PASS
#     DOCKERHUB_REPOSITORY: ${DOCKER_HUB_NAMESPACE}/${CI_PROJECT_NAME}
#     README_FILEPATH: $CI_PROJECT_DIR/README.md
#   script:
#     - echo "Uploading Description"
